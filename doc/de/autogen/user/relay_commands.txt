[[command_relay_relay]]
[command]*`relay`* Relay-Kontrolle::
........................................
/relay  list|listfull|listrelay
        add [ipv4.][ipv6.][ssl.]<protocol.name> <port>
        del [ipv4.][ipv6.][ssl.]<protocol.name>
        raw
        sslcertkey

         list: Auflistung der Relay-Clients (nur aktive Relays)
     listfull: detaillierte Auflistung der Relay-Clients (alle Relays)
    listrelay: Auflistung der Relays (Name und Port)
          add: fügt ein Relay, für ein Protokoll + Name, hinzu
          del: entfernt Relay für ein Protokoll + Name
         ipv4: erzwingt die Nutzung von IPv4
         ipv6: erzwingt die Nutzung von IPv6
          ssl: aktiviert SSL
protocol.name: Protokoll und Name des Relay:
                 - Protokoll "irc": Name des Servers welcher geteilt werden soll (optional). Wird kein Name angegeben, dann muss der Client den Servernamen mittels Befehl "PASS" anfordern. Format: "PASS Server:Passwort")
                 - Protokoll "weechat" (Name wird nicht unterstützt)
         port: Port den das Relay nutzen soll
          raw: öffnet Buffer mit RAW-Relay Daten
   sslcertkey: setzt SSL Zertifikat/Schlüssel mittels Eintrag in Option relay.network.ssl_cert_key

Ohne Angabe von Argumenten werden alle Relay-Clients in einem neuen Buffer dargestellt.

Beispiele:
  IRC Proxy für Server "freenode":
    /relay add irc.freenode 8000
  IRC Proxy, für Server "freenode", mit SSL:
    /relay add ssl.irc.freenode 8001
  IRC Proxy für alle Server (Client wählt aus), mit SSL:
    /relay add ssl.irc 8002
  WeeChat Protokoll:
    /relay add weechat 9000
  WeeChat Protokoll, mit SSL:
    /relay add ssl.weechat 9001
  WeeChat Protokoll, mit SSL, nur IPv4 nutzen:
    /relay add ipv4.ssl.weechat 9001
  WeeChat Protokoll, mit SSL, nur IPv6 nutzen:
    /relay add ipv6.ssl.weechat 9001
  WeeChat Protokoll, mit SSL, mit IPv4 + IPv6:
    /relay add ipv4.ipv6.ssl.weechat 9001
........................................

