= Guide de démarrage rapide WeeChat
:author: Sébastien Helleu
:email: flashcode@flashtux.org
:lang: fr
:toc:


[[start]]
== Démarrer WeeChat

Un émulateur de terminal recommandé pour X (mais pas obligatoire) est
rxvt-unicode (il a un bon support UTF-8, et aucun problème avec les
touches par défaut).

Lancer depuis votre shell :

----
$ weechat
----

[[help_options]]
== Aide en ligne / options

WeeChat dispose d'aide pour toutes les commandes, tapez simplement :

----
/help
----

Pour avoir de l'aide sur une commande, tapez :

----
/help commande
----

Pour modifier des options, tapez :

----
/set config.section.option valeur
----

(où `config` est le nom de la configuration (`weechat` pour le cœur, ou
un nom d'extension), `section` la section de cette configuration et
`option` le nom de l'option).

WeeChat utilise immédiatement la nouvelle valeur (vous n'avez *jamais*
besoin de redémarrer WeeChat après avoir changé la configuration).

Vous pouvez utiliser `/set` avec un nom partiel d'option et le caractère
joker "*" au début ou à la fin pour afficher toutes les options contenant
ces lettres.
Par exemple :


* afficher toutes les options (WeeChat et extensions) :

----
/set
----

* afficher les options WeeChat :

----
/set weechat.*
----

* afficher les options de l'extension IRC :

----
/set irc.*
----

Vous pouvez afficher de l'aide sur une option avec `/help`, par exemple :

----
/help weechat.look.highlight
----

Toutes les options sont sauvées quand WeeChat quitte (ou avec la commande
`/save` pour forcer une écriture des options).

Vous pouvez éditer les fichiers de configuration (*.conf) à la main et les
recharger par la commande `/reload` si vous ne souhaitez pas utiliser la
commande `/set`.

[[core_vs_plugins]]
== Cœur vs extensions

Le cœur de WeeChat ("core") ne fait qu'afficher les données à l'écran et
interagir avec l'utilisateur, cela signifie que le cœur sans extension
n'a pas grand intérêt (utilisateurs fidèles: IRC faisait partie du cœur
dans les versions ≤ 0.2.6).

Tous les protocoles réseau comme IRC sont fournis sous forme d'extensions.

Utilisez la commande `/plugin` pour voir les extensions chargées, vous
devriez voir "irc" et d'autres extensions dans cette liste.

[[create_irc_server]]
== Créer un serveur IRC

Le serveur 'freenode' est créé par défaut au premier démarrage.

Vous pouvez ajouter un autre serveur IRC avec la commande `/server`, par
exemple :

----
/server add oftc irc.oftc.net/6667
----

Comme d'habitude, de l'aide est disponible si vous êtes perdus :

----
/help server
----

[[irc_server_options]]
== Définir les options du serveur IRC

WeeChat utilise des valeurs par défaut pour tous les serveurs, si vous ne
spécifiez pas de valeur spécifique pour une option de serveur.
Ces options par défaut sont "irc.server_default.*".

Pour chaque option d'un serveur, WeeChat utilise sa valeur si elle est
définie (non "null"). Sinon WeeChat utilise la valeur par défaut
("irc.server_default.xxx").

Par exemple il y a des pseudos par défaut (basés sur votre login un*x), et
vous pouvez les écraser pour le serveur freenode avec la commande suivante :

----
/set irc.server.freenode.nicks "pseudo,pseudo2,pseudo3,pseudo4,pseudo5"
----

Pour modifier le nom d'utilisateur et nom réel :

----
/set irc.server.freenode.username "Mon nom d'utilisateur"
/set irc.server.freenode.realname "Mon nom réel"
----

Pour activer la connexion automatique au serveur lors du démarrage :

----
/set irc.server.freenode.autoconnect on
----

Pour se connecter avec SSL :

----
/set irc.server.freenode.addresses "chat.freenode.net/7000"
/set irc.server.freenode.ssl on
/set irc.server.freenode.ssl_dhkey_size 1024
----

[NOTE]
Freenode ne supporte pas la clé dhkey par défaut de 2048, donc elle doit être
définie à 1024.

Si SASL est disponible sur le serveur, vous pouvez l'utiliser pour
l'authentification (vous serez identifié avant de rejoindre les canaux) :

----
/set irc.server_default.sasl_mechanism dh-blowfish
/set irc.server.freenode.sasl_username "pseudo"
/set irc.server.freenode.sasl_password "xxxxxxx"
----

Pour lancer une commande après connexion au serveur, par exemple pour
s'authentifier auprès de nickserv (seulement si vous n'utilisez pas SASL pour
l'authentification) :

----
/set irc.server.freenode.command "/msg nickserv identify xxxxxxx"
----

[NOTE]
Plusieurs commandes dans l'option 'command' peuvent être séparées par ';'
(point-virgule).

Pour rejoindre automatiquement des canaux lors de la connexion au serveur :

----
/set irc.server.freenode.autojoin "#canal1,#canal2"
----

Pour supprimer la valeur d'une option du serveur et utiliser sa valeur par
défaut à la place, par exemple pour utiliser les pseudos par défaut
(irc.server_default.nicks) :

----
/set irc.server.freenode.nicks null
----

Autres options : vous pouvez modifier les autres options avec la commande
suivante ("xxx" est le nom d'une option) :

----
/set irc.server.freenode.xxx valeur
----

[[connect_to_irc_server]]
== Se connecter au serveur IRC et rejoindre les canaux

----
/connect freenode
----

[NOTE]
Cette commande peut aussi être utilisée pour créer et se connecter au serveur
sans utiliser la commande `/server` (dois-je répéter que vous pouvez voir
l'aide pour cette commande avec `/help connect` ?).

Par défaut, les tampons des serveurs sont mélangés avec le tampon 'core'
WeeChat. Pour basculer entre le tampon 'core' et les tampons des serveurs, il
faut utiliser la touche key[ctrl-x].

Il est possible de désactiver le mélange des tampons serveurs pour avoir un
tampon distinct par serveur :

----
/set irc.look.server_buffer independent
----

[[join_part_irc_channels]]
== Rejoindre/quitter les canaux IRC

Rejoindre un canal :

----
/join #channel
----

Quitter un canal (en laissant le tampon ouvert) :

----
/part [message de fin]
----

quitter un canal et fermer le tampon (`/close` est un alias sur
`/buffer close`) :

----
/close
----

[[irc_private_messages]]
== Messages privés IRC

Ouvrir un tampon et envoyer un message à un autre utilisateur (pseudo 'foo') :

----
/query foo ceci est un message
----

Fermer le tampon privé :

----
/close
----

[[buffer_window]]
== Gérer les tampons/fenêtres

Un tampon ("buffer") est un composant lié à une extension, avec une
catégorie et un nom. Le tampon contient les données affichées à l'écran.

Une fenêtre ("window") est une vue sur un tampon. Par défaut il n'y a
qu'une fenêtre affichant un tampon. Si vous divisez l'écran, vous verrez
alors plusieurs fenêtres avec plusieurs tampons en même temps.

Commandes pour gérer les tampons et les fenêtres :

----
/buffer
/window
----

(je ne répéterai pas que vous pouvez avoir de l'aide sur ces commandes
avec /help)

Par exemple, pour découper verticalement l'écran en une petite fenêtre
(1/3 de la largeur) et une large (2/3), utilisez la commande :

----
/window splitv 33
----

[[key_bindings]]
== Raccourcis clavier

WeeChat utilise un certain nombre de touches par défaut. Toutes ces
touches sont dans la documentation, mais vous devriez connaître au moins
les touches vitales :

- key[alt-]key[←]/key[→] ou key[F5]/key[F6] : aller au tampon précédent/suivant
- key[F7]/key[F8] : aller à la fenêtre précédente/suivante (quand l'écran est divisé)
- key[F9]/key[F10] : faire défiler la barre de titre
- key[F11]/key[F12] : faire défiler la liste des pseudos
- key[Tab] : compléter le texte de la barre d'entrée, comme avec votre shell
- key[PgUp]/key[PgDn] : faire défiler le texte dans le tampon courant
- key[alt-a]: sauter au tampon avec de l'activité (dans la "hotlist")

Selon votre clavier et/ou vos besoins, vous pouvez associer n'importe
quelle touche à une commande avec la commande `/key`.
Une touche utile est key[alt-k] pour trouver le code des touches.

Par exemple, pour associer key[alt-y] à la commande `/buffer close` :

----
/key bind (pressez alt-k) (pressez alt-y) /buffer close
----

Vous aurez une ligne de commande qui ressemble à ceci :

----
/key bind meta-y /buffer close
----

Pour enlever la touche :

----
/key unbind meta-y
----

[[plugins_scripts]]
== Extensions/scripts

Sur certaines distributions comme Debian, les extensions sont disponibles
via un paquet séparé (par exemple weechat-plugins).
Les extensions sont automatiquement chargées lorsqu'elles sont trouvées
(merci de regarder la documentation WeeChat pour charger/décharger des
extensions ou des scripts).

De nombreux scripts externes (de contributeurs) sont disponibles pour WeeChat :
http://weechat.org/scripts

Vous pouvez gérer les scripts dans WeeChat avec la commande `/script` (voir
`/help script` pour plus d'infos).

[[more_doc]]
== Plus de documentation

Vous pouvez maintenant utiliser WeeChat et lire la FAQ/documentation pour
toute autre question : http://weechat.org/doc

Bon WeeChat !
